# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/102yZ-e4VBFRw0--EmuGS6bFeAlnjowBl
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# 克隆 YOLOv5 仓库
!git clone https://github.com/ultralytics/yolov5  # 克隆 YOLOv5 仓库
# 切换到 yolov5 目录
# %cd yolov5
# 安装 YOLOv5 的依赖
!pip install -r requirements.txt

!ls

# Commented out IPython magic to ensure Python compatibility.
# ================== Importing Libraries ================== #
import torch
import os
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.layers import Conv2D, Dense, GlobalAveragePooling2D
from tensorflow.keras.models import Model
from tensorflow.keras.optimizers import Adam
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt

# ================== Dataset Loading and Preprocessing ================== #
def load_dataset():
    # Update the data paths to point to Google Drive directories
    train_data_path = '/content/drive/MyDrive/train'  # Set the path for your training data
    test_data_path = '/content/drive/MyDrive/test'    # Set the path for your testing/validation data
    return train_data_path, test_data_path

# Split dataset into train and validation
train_data_path, test_data_path = load_dataset()

# Data augmentation for image preprocessing
data_generator = ImageDataGenerator(
    rescale=1./255,
    rotation_range=20,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest'
)

# Ensure class_mode='categorical' to use one-hot encoded labels
train_data = data_generator.flow_from_directory(train_data_path, target_size=(224, 224), batch_size=32, class_mode='categorical')
test_data = data_generator.flow_from_directory(test_data_path, target_size=(224, 224), batch_size=32, class_mode='categorical')

# Check number of classes
num_classes = train_data.num_classes
print(f"Number of classes in the dataset: {num_classes}")

# ================== YOLOv5 Implementation ================== #
def train_yolov5():
    # Clone YOLOv5 repository if not already cloned
    if not os.path.exists('/content/yolov5'):
        !git clone https://github.com/ultralytics/yolov5  # Clone YOLOv5 repository

#     %cd /content/yolov5  # Change directory to YOLOv5
    # Install dependencies
    !pip install -r requirements.txt

    # Run the YOLOv5 training script
    !python train.py --img 640 --batch 16 --epochs 50 --data '/content/data.yaml' --weights yolov5s.pt

# ================== Evaluation Metrics and Visualization ================== #
def evaluate_model(model, test_data):
    predictions = model.predict(test_data)
    y_pred = predictions.argmax(axis=1)
    y_true = test_data.classes

    print("Accuracy: ", accuracy_score(y_true, y_pred))
    print("Classification Report:\n", classification_report(y_true, y_pred))
    print("Confusion Matrix:\n", confusion_matrix(y_true, y_pred))

    # Plot confusion matrix
    plt.matshow(confusion_matrix(y_true, y_pred), cmap='coolwarm')
    plt.title('Confusion Matrix')
    plt.colorbar()
    plt.show()

# ================== Main Execution ================== #
if __name__ == "__main__":
    # Ensure Google Drive is mounted correctly
    from google.colab import drive
    drive.mount('/content/drive')

    print("Training YOLOv5 model...")
    train_yolov5()  # Train YOLOv5 using its CLI script

!zip -r /content/yolov5.zip /content/yolov5

from google.colab import drive
drive.mount('/content/drive')

# 将压缩文件保存到 Google Drive
!cp /content/yolov5.zip /content/drive/MyDrive/